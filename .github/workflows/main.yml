name: Weekly Traffic Report

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  collect-traffic:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # 确保检出所有文件和目录
        fetch-depth: 0
        # 检出所有分支和历史
        ref: ${{ github.ref }}
    
    - name: Verify directory structure
      run: |
        echo "当前工作目录: $(pwd)"
        echo "列出所有文件和目录:"
        ls -la
        
        echo "检查 .github 目录:"
        if [ -d ".github" ]; then
          echo ".github 目录存在"
          ls -la .github
        else
          echo "创建 .github 目录"
          mkdir -p .github
        fi
        
        echo "确保 .github/traffic 目录存在"
        mkdir -p .github/traffic
        
        echo "检查 traffic_collector.py 文件"
        if [ -f ".github/traffic/traffic_collector.py" ]; then
          echo "traffic_collector.py 存在"
        else
          echo "错误: traffic_collector.py 不存在!"
          echo "列出 .github/traffic 内容:"
          ls -la .github/traffic || true
          exit 1  # 如果文件不存在则失败
        fi
        
        echo "确保 traffic_data.csv 文件存在"
        touch .github/traffic/traffic_data.csv
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    
    - name: Install dependencies
      run: pip install requests
    
    - name: Run traffic collector
      run: |
        echo "当前目录: $(pwd)"
        echo "运行流量收集脚本..."
        python .github/traffic/traffic_collector.py
    
    - name: Commit and push changes
      run: |
        git config user.name "github-actions"
        git config user.email "actions@users.noreply.github.com"
        
        # 添加所有更改，包括可能创建的目录
        git add .
        
        # 检查是否有实际更改
        if git diff-index --quiet HEAD --; then
          echo "没有需要提交的更改"
        else
          git commit -m "自动更新流量数据"
          git push "https://${{ github.actor }}:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git"
        fi
